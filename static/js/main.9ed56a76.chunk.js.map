{"version":3,"sources":["model/CalcModel.ts","action/Action.tsx","custom-ui/CTextField.tsx","custom-ui/NCTextField.tsx","ui/InputUI.tsx","ui/ItemListUI.tsx","ui/ItemUI.tsx","ui/SumUI.tsx","util/Util.ts","ui/App.tsx","index.tsx"],"names":["CalcOp","ActionType","CalcModel","items","nTotalItems","sum","_cookies","undefined","json","JSON","stringify","this","cookies","set","constructor","name","obj","get","Object","assign","refreshSum","id","filter","item","value","op","newItem","active","Number","length","map","reduce","a","b","Cookie","serialVersionID","calcModelReducer","state","action","type","ADD","model","createNewItem","payload","PLUS","currentInput","_add","DELETE","deleteItem","_delete","REFRESH","_refresh","CLEAR","clear","_clear","SAVE","saveToCookie","_save","LOAD","loadFromCookie","_load","CTextField","props","textFieldRef","React","createRef","defaultState","defaultResult","onInputChange","e","fText","text","target","formatResult","formatText","formattedText","textToValueResult","errorMsg","setState","onInputValue","defaultTxt","valueToText","textToValue","tfProps","ref","onInput","error","helperText","msg","message","errorValue","txt","getRawText","current","_isValid","stateErr","curErr","trim","result","TextField","muiTextFieldProps","Component","NCTextField","InputUI","dispatch","canClear","useState","inputNum","setInputNum","inputEle","useRef","Box","mb","onSubmit","preventDefault","querySelector","focus","Grid","container","direction","spacing","fullWidth","variant","label","NaN","xs","Button","style","width","height","disabled","isNaN","startIcon","Add","color","onClick","Clear","defaultProps","Error","num","replaceAll","toLocaleString","defaultText","ItemListUI","m","Paper","elevation","backgroundColor","yellow","p","ItemUI","setChecked","display","Checkbox","checked","onChange","console","log","flexGrow","mx","Delete","size","useStyles","makeStyles","theme","box","borderWidth","border","padding","SumUI","classes","className","Typography","createMuiTheme","responsiveFontSizes","appState","M","App","useReducer","appStateReducer","Container","maxWidth","AppBar","position","justify","alignItems","ReactDOM","render","document"],"mappings":"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","file":"static/js/main.9ed56a76.chunk.js","sourcesContent":["import Cookie from \"universal-cookie\";\n\nexport class CalcModel {\n  private static serialVersionID = \"v1.0\";\n  items = [] as CalcItem[];\n  nTotalItems = 0;\n  sum = 0;\n\n  private _cookies: Cookie | undefined = undefined;\n\n  get cookies(): Cookie {\n    return this._cookies ? this._cookies : new Cookie();\n  }\n\n  get cookieKey() {\n    return this.constructor.name + \"_\" + CalcModel.serialVersionID;\n  }\n\n  saveToCookie() {\n    let json = JSON.stringify(this);\n    this.cookies.set(this.constructor.name, json);\n  }\n\n  loadFromCookie() {\n    let obj = this.cookies.get(this.constructor.name);\n\n    Object.assign(this, obj);\n  }\n\n  clear() {\n    this.items = [];\n\n    this.refreshSum();\n  }\n\n  deleteItem(id: number) {\n    this.items = this.items.filter((item) => item.id !== id);\n\n    this.refreshSum();\n  }\n\n  createNewItem(value: string, op: CalcOp) {\n    let newItem = {\n      id: this.nTotalItems,\n      active: true,\n      value: Number(value),\n      op: op,\n    };\n\n    this.items = [...this.items, newItem];\n\n    this.nTotalItems++;\n\n    this.refreshSum();\n\n    // this.items.push(newItem);\n\n    return newItem;\n  }\n\n  refreshSum() {\n    if (!this.items || this.items.length === 0) {\n      this.sum = 0;\n      return;\n    }\n\n    this.sum = this.items\n      .filter((item) => item.active)\n      .map((item) => item.value)\n      .reduce((a, b) => a + b, 0);\n  }\n}\n\nexport interface CalcItem {\n  id: number;\n  value: number;\n  active: boolean;\n  op: CalcOp;\n}\n\nexport enum CalcOp {\n  PLUS,\n  MINUS,\n  MULTIPLY,\n  DIVIDE,\n}\n","import { Reducer } from \"react\";\nimport { CalcOp } from \"../model\";\nimport { AppState } from \"../ui\";\n\nexport enum ActionType {\n  ADD,\n  DELETE,\n  REFRESH,\n  CLEAR,\n  SAVE,\n  LOAD,\n}\n\nexport interface Action {\n  type: ActionType;\n  payload?: any;\n}\n\nexport const calcModelReducer: Reducer<AppState, Action> = (\n  state: AppState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionType.ADD:\n      _add(state, action);\n      return { ...state };\n    case ActionType.DELETE:\n      _delete(state, action);\n      return { ...state };\n    case ActionType.REFRESH:\n      _refresh(state, action);\n      return { ...state };\n    case ActionType.CLEAR:\n      _clear(state, action);\n      return { ...state };\n    case ActionType.SAVE:\n      _save(state, action);\n      return state;\n    case ActionType.LOAD:\n      _load(state, action);\n      return { ...state };\n    default:\n      return state;\n  }\n};\n\n// export function calcModelReducer(prevState: CalcModel, action: Action) {\n//   switch (action.type) {\n//     case ActionType.ADD:\n//       return _add(prevState, action);\n//     case ActionType.DELETE:\n//       return _delete(prevState, action);\n//   }\n//   action.m.createNewItem(action.payload.value, CalcOp.PLUS);\n//   return action.m.items;\n// } :  Reducer<any, any>;\n\nfunction _save(state: AppState, action: Action) {\n  state.model.saveToCookie();\n  state.currentInput = 0;\n  return state;\n}\n\nfunction _load(state: AppState, action: Action) {\n  state.model.loadFromCookie();\n  state.currentInput = 0;\n  return state;\n}\n\nfunction _add(state: AppState, action: Action) {\n  state.model.createNewItem(action.payload, CalcOp.PLUS);\n  state.currentInput = 0;\n  return state;\n}\n\nfunction _delete(state: AppState, action: Action) {\n  state.model.deleteItem(action.payload);\n  return state;\n}\n\nfunction _refresh(state: AppState, action: Action) {\n  state.model.refreshSum();\n  return state;\n}\n\nfunction _clear(state: AppState, action: Action) {\n  state.model.clear();\n  return state;\n}\n","import { TextField, TextFieldProps } from \"@material-ui/core\";\nimport * as U from \"../util\";\nimport React from \"react\";\n\ninterface CTextFieldState {\n  // rawText: string;\n  text: string;\n  errorMsg: string | null;\n}\n\ninterface CTextFieldOwnProps<T> {\n  onInputValue?: (result: TextToValueResult<T>) => void;\n  value: T;\n  errorValue: T;\n  textToValue: (text: string) => T;\n  valueToText: (value: T) => string;\n}\n\n//https://stackoverflow.com/questions/56085306/error-message-an-interface-can-only-extend-an-object-type-or-intersection-of-o\nexport type CTextFieldProps<T> = TextFieldProps & CTextFieldOwnProps<T>;\n\nexport interface TextToValueResult<T> {\n  value: T;\n  errorMsg: string;\n}\n\nexport class CTextField<T> extends React.Component<\n  CTextFieldProps<T>,\n  CTextFieldState\n> {\n  // 実装クラス毎に作る\n  // https://stackoverflow.com/a/37282264\n  // public static defaultProps = {\n  //   defaultValue: null,\n  //   errorValue: null,\n  //   // parser: (txt :string) => txt,\n  //   formatter: (value: any) => JSON.stringify(value),\n  // }\n  // defaultTxt: string;\n\n  textFieldRef = React.createRef<any>();\n\n  defaultState: CTextFieldState;\n\n  defaultResult: TextToValueResult<T>;\n\n  constructor(props: CTextFieldProps<T>) {\n    super(props);\n\n    let defaultTxt = props.value ? this.valueToText(props.value) : \"\";\n\n    this.defaultResult = this.textToValue(defaultTxt);\n\n    this.defaultState = {\n      text: defaultTxt,\n      errorMsg: this.defaultResult.errorMsg,\n    };\n\n    this.state = this.defaultState;\n  }\n\n  clear() {\n    this.setState(this.defaultState);\n    if (this.props.onInputValue) {\n      // let defaultParseResult = this.textToValue(this.defaultTxt);\n      this.props.onInputValue(this.defaultResult);\n    }\n  }\n\n  muiTextFieldProps(): TextFieldProps {\n    // couldn't find a way to iterate over interface's key\n    let ownKeys = [\n      \"onInputValue\",\n      \"errorValue\",\n      \"defaultText\",\n      \"textToValue\",\n      \"valueToText\",\n    ];\n\n    let tfProps = Object.assign({}, this.props) as any;\n\n    for (const key of ownKeys) {\n      delete tfProps[`${key}`];\n    }\n\n    tfProps.ref = this.textFieldRef;\n    tfProps.onInput = this.onInputChange;\n    tfProps.error = !!this.state.errorMsg; //if truthy\n    tfProps.helperText = this.helperText();\n    // helperText=\"半角数字を入力してください\"\n    // error={inputError}\n    tfProps.value = this.state.text;\n    // value={U.formatNumComma(this.props.defaultInput)}\n\n    return tfProps as TextFieldProps;\n  }\n\n  onInputChange = (e: any) => {\n    let text = e.target.value;\n\n    let formatResult = this.formatText(text);\n\n    if (this.state.text !== formatResult.formattedText) {\n      let fText;\n      if (!!formatResult.textToValueResult.errorMsg) {\n        //error\n        fText = e.target.value;\n      } else {\n        //no error\n        fText = formatResult.formattedText;\n      }\n\n      this.setState({\n        text: fText,\n        errorMsg: formatResult.textToValueResult.errorMsg,\n      });\n\n      if (this.props.onInputValue) {\n        this.props.onInputValue(formatResult.textToValueResult);\n      }\n    }\n  };\n\n  private valueToText(value: T) {\n    return this.props.valueToText(value);\n  }\n\n  private textToValue(text: string): TextToValueResult<T> {\n    if (!text) text = \"\";\n\n    try {\n      let value = this.props.textToValue(text);\n      return {\n        value: value,\n        errorMsg: \"\",\n      };\n    } catch (error) {\n      let msg;\n      if (\"message\" in error) {\n        msg = error.message;\n      } else {\n        msg = JSON.stringify(error);\n      }\n\n      return {\n        value: this.props.errorValue,\n        errorMsg: msg,\n      };\n    }\n  }\n\n  getValue(): T {\n    let txt = this.getRawText();\n    return this.textToValue(txt).value;\n  }\n\n  getRawText(): string {\n    return this.textFieldRef.current.value;\n  }\n\n  isValid(): boolean {\n    return this._isValid(this.getRawText());\n  }\n\n  private _isValid(text: string): boolean {\n    return !!!this.textToValue(text).errorMsg;\n  }\n\n  private _checkValid(text: string): void {\n    let stateErr = this.state.errorMsg;\n    let curErr = this.textToValue(text).errorMsg;\n\n    if (stateErr !== curErr) {\n      this.setState({\n        ...this.state,\n        errorMsg: curErr,\n      });\n    }\n  }\n\n  private helperText() {\n    if (this.state.errorMsg && this.state.errorMsg.trim()) {\n      return this.state.errorMsg;\n    } else {\n      return \"\";\n    }\n  }\n\n  private formatText(\n    text: string\n  ): {\n    textToValueResult: TextToValueResult<T>;\n    formattedText: string;\n  } {\n    let result = this.textToValue(text);\n\n    let formattedText;\n    if (result.errorMsg) {\n      formattedText = text;\n    } else {\n      formattedText = this.props.valueToText(result.value);\n    }\n\n    return {\n      textToValueResult: result,\n      formattedText: formattedText,\n    };\n  }\n\n  render() {\n    return <TextField {...this.muiTextFieldProps()} />;\n  }\n}\n","import { CTextField } from \"./CTextField\";\n\nexport class NCTextField extends CTextField<number> {\n  static defaultProps = {\n    errorValue: NaN,\n    textToValue: (text: string) => {\n      if (!text || !text.trim()) {\n        // No helper message, just notify an error\n        throw new Error(\" \");\n      }\n\n      let num = Number(text.replaceAll(\".\", \"\").replaceAll(\",\", \"\"));\n\n      if (isNaN(num)) {\n        throw new Error(\"数値が読み取れません。\");\n      }\n      return num;\n    },\n    valueToText: (value: number) => value.toLocaleString(\"en\"),\n  };\n}\n\nexport class NoEmptyCTextField extends CTextField<string> {\n  static defaultProps = {\n    errorValue: \"\",\n    defaultText: \"\",\n    textToValue: (text: string) => {\n      if (!text || !text.trim()) {\n        // No helper message, just notify an error\n        throw new Error(\" \");\n      }\n      return text;\n    },\n    valueToText: (value: string) => value,\n  };\n}\n","import { Box, Button, Grid } from \"@material-ui/core\";\nimport { Add, Clear } from \"@material-ui/icons\";\nimport React, { useRef, useState } from \"react\";\nimport { ActionType } from \"../action/Action\";\nimport { TextToValueResult } from \"../custom-ui/CTextField\";\nimport { NCTextField } from \"../custom-ui/NCTextField\";\n\n// const useStyles = makeStyles((theme) => ({\n//   box: {\n//     // padding: 10,\n//     // height: 200,\n//     // color: \"palette.primary\",\n//     display: \"flex\",\n//     flexDirection: \"row\",\n//     justifyContent: \"center\",\n//   },\n//   txt: {\n//     margin: 5,\n//   },\n//   btn: {\n//     margin: 5,\n//   },\n// }));\n\nexport function InputUI({ dispatch, canClear }: any): JSX.Element {\n  const [inputNum, setInputNum] = useState(0);\n  const inputEle = useRef<any>(null);\n\n  function onSubmit(e: any) {\n    e.preventDefault();\n\n    dispatch!({\n      type: ActionType.ADD,\n      payload: inputNum,\n    });\n\n    inputEle.current.clear();\n\n    e.target.querySelector(\"input\").focus();\n  }\n\n  function onClearClick(e: any) {\n    dispatch!({\n      type: ActionType.CLEAR,\n    });\n  }\n\n  function onInputNum(result: TextToValueResult<number>) {\n    setInputNum(result.value);\n  }\n\n  function isInputValid() {\n    return !isNaN(inputNum) && inputNum !== 0;\n  }\n\n  return (\n    <Box mb={4}>\n      <form onSubmit={onSubmit}>\n        <Grid container direction=\"column\" spacing={2}>\n          <Grid item>\n            <NCTextField\n              fullWidth={true}\n              ref={inputEle}\n              onInputValue={onInputNum}\n              variant=\"outlined\"\n              label=\"数字を入力\"\n              value={NaN}\n            ></NCTextField>\n          </Grid>\n          <Grid item container spacing={2}>\n            <Grid item xs={6}>\n              <Button\n                style={{\n                  width: \"100%\",\n                  height: \"100%\",\n                }}\n                type=\"submit\"\n                disabled={!isInputValid()}\n                startIcon={<Add />}\n                variant=\"contained\"\n                color=\"primary\"\n              >\n                追加\n              </Button>\n            </Grid>\n            <Grid item xs={6}>\n              <Button\n                style={{\n                  width: \"100%\",\n                  height: \"100%\",\n                }}\n                onClick={onClearClick}\n                disabled={!canClear}\n                startIcon={<Clear />}\n                variant=\"contained\"\n                color=\"secondary\"\n              >\n                オールクリア\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </form>\n    </Box>\n  );\n}\n","import { Box, Grid, Paper } from \"@material-ui/core\";\nimport yellow from \"@material-ui/core/colors/yellow\";\nimport React from \"react\";\nimport { ItemUI } from \"./\";\n\nexport function ItemListUI({ items, dispatch }: any): JSX.Element {\n  return (\n    <>\n      <Box>\n        {items.map((item: any) => (\n          <Box key={item.id} m={1}>\n            <Paper elevation={3} style={{ backgroundColor: yellow[100] }}>\n              <Box p={1}>\n                <ItemUI item={item} dispatch={dispatch} />\n              </Box>\n            </Paper>\n          </Box>\n        ))}\n      </Box>\n    </>\n  );\n}\n","import { Box, Button, Checkbox, Grid } from \"@material-ui/core\";\nimport { Delete } from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\nimport { ActionType } from \"../action/Action\";\nimport { TextToValueResult } from \"../custom-ui/CTextField\";\nimport { NCTextField } from \"../custom-ui/NCTextField\";\n\nexport const ItemUI: React.FC<any> = ({ item, dispatch }) => {\n  const [inputNum, setInputNum] = useState(item.value);\n  const [checked, setChecked] = useState(item.active);\n\n  function onDeleteClick(e: any) {\n    dispatch!({\n      type: ActionType.DELETE,\n      payload: item.id,\n    });\n  }\n\n  function onCheckBoxClick(e: any) {\n    setChecked(e.target.checked);\n    item.active = e.target.checked;\n    console.log(\"check clicked\");\n\n    dispatch!({\n      type: ActionType.REFRESH,\n    });\n  }\n\n  function onInputNum(result: TextToValueResult<number>) {\n    setInputNum(result.value);\n\n    item.value = result.value;\n\n    dispatch!({\n      type: ActionType.REFRESH,\n    });\n  }\n\n  return (\n    <Box display=\"flex\">\n      <Checkbox\n        color=\"primary\"\n        checked={item.active}\n        onChange={onCheckBoxClick}\n      ></Checkbox>\n      <Box flexGrow={1} mx={2}>\n        <NCTextField\n          fullWidth={true}\n          onInputValue={onInputNum}\n          variant=\"standard\"\n          // label=\"数字を変更\"\n          value={item.value}\n        />\n      </Box>\n      <Button\n        startIcon={<Delete />}\n        size=\"small\"\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={onDeleteClick}\n      >\n        削除\n      </Button>\n    </Box>\n  );\n};\n","import { Box, makeStyles, Typography } from \"@material-ui/core\";\nimport * as U from \"../util/Util\";\n\nconst defaultProps = {\n  borderColor: \"text.primary\",\n  m: 1,\n  border: 14,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    // padding: 10,\n    // height: 200,\n    borderWidth: 5,\n    border: 5,\n    padding: 20,\n    // display: \"flex\",\n    // flexDirection: \"row\",\n    // justifyContent: \"center\",\n  },\n}));\n\nexport const SumUI: React.FC<any> = ({ sum }) => {\n  const classes = useStyles();\n\n  return (\n    <Box border={6} className={classes.box}>\n      {/* <Box border={14}> */}\n      <Typography variant=\"h3\">\n        {U.formatNumComma(sum)}\n        {/* <TextField size=\"medium\" aria-readonly={true} value={sum} /> */}\n      </Typography>\n    </Box>\n  );\n};\n","export function formatNumComma(num: number): string {\n  return num.toLocaleString(\"en\");\n}\n\nexport function toNumber(str: string): number {\n  return Number(str.replaceAll(\".\", \"\").replaceAll(\",\", \"\"));\n}\n","import {\n  AppBar,\n  Box,\n  Container,\n  createMuiTheme,\n  Grid,\n  MuiThemeProvider,\n  responsiveFontSizes,\n  // Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { useReducer } from \"react\";\nimport { InputUI, ItemListUI, SumUI } from \".\";\nimport { calcModelReducer as appStateReducer } from \"../action/Action\";\nimport \"../App.css\";\nimport * as M from \"../model\";\n// import { SaveLoadUI } from \"./SaveLoadUI\";\n\nlet theme = createMuiTheme();\ntheme = responsiveFontSizes(theme);\n\n// const useStyles = makeStyles({\n//   root: {\n//     background: \"linear-gradient(45deg, #333, #999)\",\n//     // border: 0,\n//     // borderRadious: 15,\n//     // color: \"white\",\n//     // padding: \"0 30px\",\n//   },\n// });\n\n// const theme = createMuiTheme({\n//   palette: {\n//     primary: {\n//       main: blue[300],\n//     },\n//     secondary: {\n//       main: orange[500],\n//     },\n//   },\n// });\n\n// function ButtonStyled() {\n//   const classes = useStyles();\n//   return <Button className={classes.root}>Test Styled Button</Button>;\n// }\n\n// class CAppContext {\n//   model = new M.CalcModel();\n// }\n\n// export const AppContext = React.createContext(new CAppContext());\n\n// dispatch: React.Dispatch<Action> | null = null;\n\nexport interface AppState {\n  model: M.CalcModel;\n  currentInput: number;\n}\n\nconst appState: AppState = {\n  model: new M.CalcModel(),\n  currentInput: 0,\n};\n\nexport default function App(): JSX.Element {\n  const [state, dispatch] = useReducer(appStateReducer, appState);\n\n  return (\n    <>\n      <MuiThemeProvider theme={theme}>\n        <Container maxWidth=\"md\">\n          <AppBar position=\"sticky\">\n            <Box m=\"auto\">\n              <SumUI sum={state.model.sum} />\n            </Box>\n            {/* <SaveLoadUI dispatch={dispatch} /> */}\n          </AppBar>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={5}\n          >\n            <Box m={5} style={{ width: \"80%\" }}>\n              <Typography variant=\"button\">\n                <Grid item>\n                  <InputUI\n                    dispatch={dispatch}\n                    canClear={\n                      state.model.items && state.model.items.length !== 0\n                    }\n                  />\n                </Grid>\n                <Grid item>\n                  <ItemListUI items={state.model.items} dispatch={dispatch} />\n                </Grid>\n              </Typography>\n            </Box>\n          </Grid>\n        </Container>\n      </MuiThemeProvider>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./ui/App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}